(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{76:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return d}));var a=n(3),r=n(7),c=(n(0),n(94)),i={title:"LiquidVRAM"},o={unversionedId:"liquidapps/vram",id:"liquidapps/vram",isDocsHomePage:!1,title:"LiquidVRAM",description:"This is a paid feature. Please check the pricing page for our different subscription tiers.",source:"@site/docs/liquidapps/vram.md",slug:"/liquidapps/vram",permalink:"/hydra/liquidapps/vram",editUrl:"https://github.com/klevoya/docs/edit/master/docs/liquidapps/vram.md",version:"current",sidebar:"docs",previous:{title:"Types",permalink:"/hydra/api/types"}},s=[],l={rightToc:s};function d(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(c.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(c.b)("h5",{parentName:"div"},Object(c.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(c.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(c.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"Paid feature")),Object(c.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(c.b)("p",{parentName:"div"},"This is a paid feature. Please check the ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"http://klevoya.com/pricing.html"}),"pricing page")," for our different subscription tiers."))),Object(c.b)("p",null,"Hydra supports reading and writing ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.liquidapps.io/en/v2.0/services/ipfs-service.html"}),"LiquidApps' vRAM tables"),".\nUnlike standard ",Object(c.b)("inlineCode",{parentName:"p"},"eosio::multi_index")," tables, vRAM tables are stored and encoded across multiple tables.\nHydra decodes this table data on the fly when using ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/hydra/api/account#gettablerowsscopedtablename-string-dictionarytablerowstructure"}),Object(c.b)("inlineCode",{parentName:"a"},"getTableRowsScoped")),", so they can be used like any other EOSIO multi-index table.\nAt the same time, it's possible to use Hydra's exisiting ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/hydra/guides/initial-contract-tables"}),"fixture loading feature")," to load initial vRAM table data."),Object(c.b)("p",null,"Consider a ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/liquidapps-io/zeus-sdk/blob/master/boxes/groups/sample/coldtoken/README.md"}),"token contract")," storing the user account balances in a vRAM table:"),Object(c.b)("h4",{id:"coldtoken"},"coldtoken"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-cpp"}),'TABLE account {\n    asset    balance;\n    uint64_t primary_key()const { return balance.symbol.code().raw(); }\n};\n\ntypedef dapp::multi_index<"accounts"_n, account> accounts_t;\ntypedef eosio::multi_index<".accounts"_n, account> accounts_t_v_abi;\nTABLE shardbucket {\n    std::vector<char> shard_uri;\n    uint64_t shard;\n    uint64_t primary_key() const { return shard; }\n};\ntypedef eosio::multi_index<"accounts"_n, shardbucket> accounts_t_abi;\n')),Object(c.b)("h4",{id:"reading-table-data"},"Reading table data"),Object(c.b)("p",null,"The transfer function can be tested by simply reading the ",Object(c.b)("inlineCode",{parentName:"p"},"accounts")," table that the ",Object(c.b)("inlineCode",{parentName:"p"},"dapp::multi_index")," was defined on:"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'test("it can transfer the vram balance", async () => {\n  expect.assertions(1);\n\n  await vram.contract.transfer(\n    {\n      from: vram.accountName,\n      to: user.accountName,\n      quantity: `1.0000 TOKENS`,\n      memo: `transfer balance`,\n    },\n    [{ actor: vram.accountName, permission: `active` }]\n  );\n\n  // table is actually a shard table but hydra decodes it on the fly\n  expect(vram.getTableRowsScoped(`accounts`)).toEqual({\n    user: [\n      {\n        balance: "1.0000 TOKENS",\n      },\n    ],\n    vram: [\n      {\n        balance: "41.0000 TOKENS",\n      },\n    ],\n  });\n});\n')),Object(c.b)("p",null,"Under the hood, Hydra transforms the vRAM table data to what one would expect."),Object(c.b)("h4",{id:"loading-table-data"},"Loading table data"),Object(c.b)("p",null,"Using the ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/hydra/guides/initial-contract-tables"}),Object(c.b)("inlineCode",{parentName:"a"},"hydraload")," action"),", one can inject data into any vRAM table.\nEnable it by including the header file and annotating each ",Object(c.b)("inlineCode",{parentName:"p"},"dapp::multi_index")," type:"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-cpp"}),'// #include it at the top\n#include "hydra.hpp"\n\nCONTRACT_START()\n public:\n  // ...\n  // HYDRA_FIXUTRE_ACTION takes tuples of dapp multi-indexes as arguments\n  typedef dapp::multi_index<"accounts"_n, account> accounts_t;\n\n  HYDRA_FIXTURE_ACTION(\n      ((accounts)(account)(accounts_t))\n  )\n\n  // ...\n\n// don\'t forget to add hydraload to the list of actions here too (!)\nCONTRACT_END((create)(issue)(transfer)(hydraload))\n')),Object(c.b)("p",null,"Afterwards, specify the data to load in your tests:"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'test("it loads vram fixtures", async () => {\n  expect.assertions(1);\n\n  await vram.resetTables();\n\n  const tx = await vram.loadFixtures(`accounts`, {\n    user: [\n      {\n        balance: "1.0000 TOKENS",\n      },\n    ],\n    vram: [\n      {\n        balance: "41.0000 TOKENS",\n      },\n    ],\n  });\n\n  // table is actually a shard table but hydra decodes it on the fly\n  expect(vram.getTableRowsScoped(`accounts`)).toEqual({\n    user: [\n      {\n        balance: "1.0000 TOKENS",\n      },\n    ],\n    vram: [\n      {\n        balance: "41.0000 TOKENS",\n      },\n    ],\n  });\n});\n')))}d.isMDXComponent=!0},94:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),d=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=d(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=d(n),u=a,m=p["".concat(i,".").concat(u)]||p[u]||b[u]||c;return n?r.a.createElement(m,o(o({ref:t},l),{},{components:n})):r.a.createElement(m,o({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,i=new Array(c);i[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var l=2;l<c;l++)i[l]=n[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);