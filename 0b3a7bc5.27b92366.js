(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{108:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),u=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(n),d=r,m=p["".concat(o,".").concat(d)]||p[d]||b[d]||c;return n?a.a.createElement(m,i(i({ref:t},l),{},{components:n})):a.a.createElement(m,i({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,o=new Array(c);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var l=2;l<c;l++)o[l]=n[l];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},115:function(e,t,n){"use strict";var r=n(0),a=n.n(r);t.a=function(e){var t=e.id,n=e.src,c=e.rows,o=e.autoPlay,i=e.loop,s=a.a.useRef();return function(e){var t=e.ref,n=e.src,a=e.id,c=e.rows,o=void 0===c?16:c,i=e.autoPlay,s=void 0!==i&&i,l=e.loop,u=void 0!==l&&l;Object(r.useEffect)((function(){if(t.current){var e=document.createElement("script");return e.src=n,e.id=a,e.dataset.autoplay=s,e.dataset.loop=u,e.dataset.size="small",e.dataset.rows=o,e.dataset.cols=120,e.async=!0,t.current.appendChild(e),function(){t.current&&t.current.removeChild(e)}}}),[t])}({ref:s,id:t,src:n,rows:c,autoPlay:o,loop:i}),a.a.createElement("div",{key:t,ref:s})}},62:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return u}));var r=n(3),a=n(7),c=(n(0),n(108)),o=(n(115),{title:"Getting Started"}),i={unversionedId:"about/getting-started",id:"about/getting-started",isDocsHomePage:!1,title:"Getting Started",description:"Inspect is an automated vulnerability scanner for your EOSIO smart contracts.",source:"@site/inspect/about/getting-started.md",slug:"/about/getting-started",permalink:"/inspect/about/getting-started",version:"current",sidebar:"inspect",next:{title:"CLI",permalink:"/inspect/cli/cli"}},s=[{value:"Quick Start",id:"quick-start",children:[{value:"Setup",id:"setup",children:[]},{value:"Scan smart contracts for vulnerabilities",id:"scan-smart-contracts-for-vulnerabilities",children:[]},{value:"Checking reports",id:"checking-reports",children:[]}]}],l={rightToc:s};function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Inspect")," is an automated vulnerability scanner for your EOSIO smart contracts.\nInspect makes finding vulnerabilities in your EOSIO smart contracts easy to do within your development workflow. Giving you peace of mind before you deploy on-chain."),Object(c.b)("h2",{id:"quick-start"},"Quick Start"),Object(c.b)("h3",{id:"setup"},"Setup"),Object(c.b)("p",null,"Inspect is currently accessible through a ",Object(c.b)("strong",{parentName:"p"},"CLI"),".\nThis CLI is a Node.js library, so make sure ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://nodejs.org/en/download/"}),"Node.js/NPM")," is installed."),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"npm i -g @klevoya/inspect\n")),Object(c.b)("p",null,"Log in to your existing ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://klevoya.com"}),"Klevoya account")," or sign up by running the ",Object(c.b)("inlineCode",{parentName:"p"},"login")," command and following the instructions:"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"inspect login\n")),Object(c.b)("h3",{id:"scan-smart-contracts-for-vulnerabilities"},"Scan smart contracts for vulnerabilities"),Object(c.b)("p",null,"Once logged in to the CLI, you can analyse your compiled ",Object(c.b)("inlineCode",{parentName:"p"},".wasm")," smart contracts by running the ",Object(c.b)("inlineCode",{parentName:"p"},"inspect check")," command.\nThis uploads the compiled smart contract to our server and queues an analysis."),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"inspect check /path/to/contract.wasm\n")),Object(c.b)("h3",{id:"checking-reports"},"Checking reports"),Object(c.b)("p",null,"The analysis of large contracts can take several minutes.\nEach report can be reviewed individually at any time by running the ",Object(c.b)("inlineCode",{parentName:"p"},"inspect reports")," command."),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"inspect reports # lists all reports\ninspect reports 123 # lists the report with the specified report id\n")),Object(c.b)("p",null,"The result will be a list of potential traces that have been found for ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/klevoya/eosio-wcr-registry"}),"common EOSIO vulnerabilities"),"."))}u.isMDXComponent=!0}}]);