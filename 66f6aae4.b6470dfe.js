(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{108:function(t,e,r){"use strict";r.d(e,"a",(function(){return p})),r.d(e,"b",(function(){return y}));var n=r(0),a=r.n(n);function o(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function i(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function c(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?i(Object(r),!0).forEach((function(e){o(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function s(t,e){if(null==t)return{};var r,n,a=function(t,e){if(null==t)return{};var r,n,a={},o=Object.keys(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var u=a.a.createContext({}),l=function(t){var e=a.a.useContext(u),r=e;return t&&(r="function"==typeof t?t(e):c(c({},e),t)),r},p=function(t){var e=l(t.components);return a.a.createElement(u.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return a.a.createElement(a.a.Fragment,{},e)}},b=a.a.forwardRef((function(t,e){var r=t.components,n=t.mdxType,o=t.originalType,i=t.parentName,u=s(t,["components","mdxType","originalType","parentName"]),p=l(r),b=n,y=p["".concat(i,".").concat(b)]||p[b]||d[b]||o;return r?a.a.createElement(y,c(c({ref:e},u),{},{components:r})):a.a.createElement(y,c({ref:e},u))}));function y(t,e){var r=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var o=r.length,i=new Array(o);i[0]=b;var c={};for(var s in e)hasOwnProperty.call(e,s)&&(c[s]=e[s]);c.originalType=t,c.mdxType="string"==typeof t?t:n,i[1]=c;for(var u=2;u<o;u++)i[u]=r[u];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"},115:function(t,e,r){"use strict";var n=r(0),a=r.n(n);e.a=function(t){var e=t.id,r=t.src,o=t.rows,i=t.autoPlay,c=t.loop,s=a.a.useRef();return function(t){var e=t.ref,r=t.src,a=t.id,o=t.rows,i=void 0===o?16:o,c=t.autoPlay,s=void 0!==c&&c,u=t.loop,l=void 0!==u&&u;Object(n.useEffect)((function(){if(e.current){var t=document.createElement("script");return t.src=r,t.id=a,t.dataset.autoplay=s,t.dataset.loop=l,t.dataset.size="small",t.dataset.rows=i,t.dataset.cols=120,t.async=!0,e.current.appendChild(t),function(){e.current&&e.current.removeChild(t)}}}),[e])}({ref:s,id:e,src:r,rows:o,autoPlay:i,loop:c}),a.a.createElement("div",{key:e,ref:s})}},80:function(t,e,r){"use strict";r.r(e),r.d(e,"frontMatter",(function(){return c})),r.d(e,"metadata",(function(){return s})),r.d(e,"rightToc",(function(){return u})),r.d(e,"default",(function(){return p}));var n=r(3),a=r(7),o=(r(0),r(108)),i=r(115),c={title:"Getting Started"},s={unversionedId:"hydra/about/getting-started",id:"hydra/about/getting-started",isDocsHomePage:!1,title:"Getting Started",description:"Hydra is an EOSIO smart contract testing framework that allows you to quickly get started with testing your smart contract code.",source:"@site/docs/hydra/about/getting-started.md",slug:"/hydra/about/getting-started",permalink:"/hydra/hydra/about/getting-started",editUrl:"https://github.com/klevoya/docs/edit/master/docs/hydra/about/getting-started.md",version:"current"},u=[{value:"Quick Start",id:"quick-start",children:[{value:"Setup",id:"setup",children:[]},{value:"Writing tests",id:"writing-tests",children:[]}]}],l={rightToc:u};function p(t){var e=t.components,r=Object(a.a)(t,["components"]);return Object(o.b)("wrapper",Object(n.a)({},l,r,{components:e,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Hydra is an EOSIO smart contract testing framework that allows you to quickly get started with testing your smart contract code.\nBesides Hydra, installing additional software or running your own local blockchain node is ",Object(o.b)("strong",{parentName:"p"},"not")," required. "),Object(o.b)("h2",{id:"quick-start"},"Quick Start"),Object(o.b)("h3",{id:"setup"},"Setup"),Object(o.b)("p",null,"Hydra is a Node.js library, so make sure ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://nodejs.org/en/download/"}),"Node.js/NPM")," is installed."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"npm i -g @klevoya/hydra\n")),Object(o.b)("p",null,"Log in to your existing ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://klevoya.com"}),"Klevoya account")," or sign up by running the ",Object(o.b)("inlineCode",{parentName:"p"},"login")," command and following the instructions:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"hydra login\n")),Object(o.b)(i.a,{id:"asciicast-nhP4pvp7hv6L6FFJu4kyUYHzc",src:"https://asciinema.org/a/nhP4pvp7hv6L6FFJu4kyUYHzc.js",autoPlay:!0,mdxType:"Asciinema"}),Object(o.b)("h3",{id:"writing-tests"},"Writing tests"),Object(o.b)("p",null,"Hydra tests are written in JavaScript/TypeScript using a JavaScript testing library of your choice."),Object(o.b)("p",null,"Navigate to your contract project's root folder and compile your smart contract.\nAfter that, run the ",Object(o.b)("inlineCode",{parentName:"p"},"hydra init")," command selecting the contracts you want to test.\nIt will initialize an NPM project and set up a JavaScript testing library (",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://jestjs.io/"}),"jest"),")."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"cd eos-project\n\nhydra init\n")),Object(o.b)(i.a,{id:"asciicast-PAxoLGM4Qck2APSvquLFcAN4T",src:"https://asciinema.org/a/PAxoLGM4Qck2APSvquLFcAN4T.js",mdxType:"Asciinema"}),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"init")," command also bootstraps your project by creating a ",Object(o.b)("inlineCode",{parentName:"p"},"hydra.yml")," configuration file and a test boilerplate in the ",Object(o.b)("inlineCode",{parentName:"p"},"tests")," directory.\nThen run your tests:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"npm test\n")),Object(o.b)(i.a,{id:"asciicast-kNeDMxCjx1zZM4AtjFwhxilsE",src:"https://asciinema.org/a/kNeDMxCjx1zZM4AtjFwhxilsE.js",autoPlay:!0,mdxType:"Asciinema"}))}p.isMDXComponent=!0}}]);